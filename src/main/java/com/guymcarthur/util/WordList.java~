package com.guymcarthur.util;

import java.io.BufferedReader;
import java.io.IOException;
import java.util.*;

public class WordList extends Vector {

  /**
   * @param in Alphabetically ordered word list
   */
  public WordList(BufferedReader in) throws IOException {
    super(1000, 100);
    String line;
    while((line=in.readLine())!=null) addElement(line.trim().toLowerCase());
  }
  
  /**
   * @param word Fragment to lookup
   * @return 1 if word is in list, -1 if word(s) in list start with word,
   * 0 if no words start with word
   */
  public int has(String word) {  
    boolean foundStart=false, foundWord=false;
    for(Enumeration e=elements();e.hasMoreElements();) {
      
      String element=(String)e.nextElement();

      /*
	iterate through dictionary.
	if words don't start with word, continue.
	else if words do start with word, and foundStart is false
	set foundStart to true
	if words equal word, set foundWord to true
	once words don't start with word, return 1 if foundWord, -1
	if foundStart, otherwise 0
       */
      
      if(element.startsWith(word)) {
	if(!foundStart) foundStart=true;
	if(element.equals(word)) foundWord=true;
      }
      else {
	if(foundWord) return 1;
	if(foundStart) return -1;
      }


      /*
	if(element.startsWith(word)) {
	foundStart=true;
	if(element.equals(word)) return 1;
      } else {
	if(foundStart) return -1;
	}
      */
    }//end for
    return 0;
  }
}
